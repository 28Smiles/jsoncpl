name: create-release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The Version'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set Version in Cargo
      run: |
        sed -i ':a;N;$!ba;s/name = "jsoncpl"\nversion = "[^"]*"/name = "jsoncpl"\nversion = "${{ github.event.inputs.version }}"/g' Cargo.toml
        sed -i ':a;N;$!ba;s/name = "jsoncpl"\nversion = "[^"]*"/name = "jsoncpl"\nversion = "${{ github.event.inputs.version }}"/g' Cargo.lock
    - name: Install targets
      run: |
        sudo apt-get install -y mingw-w64
        rustup target add x86_64-pc-windows-gnu
        rustup target add x86_64-unknown-linux-gnu
    - uses: Swatinem/rust-cache@v1
    - name: Run tests
      run: cargo test --verbose
    - name: Build Linux
      run: cargo build --target x86_64-unknown-linux-gnu --verbose --release
    - name: Create Linux artifacts
      run: |
        mkdir staging
        upx -9 -o staging/jsoncpl target/x86_64-unknown-linux-gnu/release/jsoncpl
        cd staging
        zip jsoncpl-linux.zip jsoncpl
        tar -cvzf jsoncpl-linux.tar.gz jsoncpl
        rm jsoncpl
    - name: Build Windows
      run: cargo build --target x86_64-pc-windows-gnu --verbose --release
    - name: Create Windows artifacts
      run: |
        upx -9 -o staging/jsoncpl.exe target/x86_64-pc-windows-gnu/release/jsoncpl.exe
        cd staging
        zip jsoncpl-windows.zip jsoncpl.exe
        tar -cvzf jsoncpl-windows.tar.gz jsoncpl.exe
        rm jsoncpl.exe
    - name: Build-musl macOS x86
      uses: Shogan/rust-musl-action@v1.0.2
      with:
        args:
          cargo build --target x86_64-apple-darwin --verbose --release
    - name: Create MacOS artifacts
      run: |
        upx -9 -o staging/jsoncpl target/x86_64-apple-darwin/release/jsoncpl
        cd staging
        zip jsoncpl-macos.zip jsoncpl
        tar -cvzf jsoncpl-macos.tar.gz jsoncpl
        rm jsoncpl
    - name: Commit to the repo
      run: |
        git config --global user.name "28Smiles"
        git config --global user.email "leon@camus.fun"
        git add Cargo.toml Cargo.lock
        git commit -m "chore: Bump Version"
        git push
        git tag "v${{ github.event.inputs.version }}"
        git push --tags
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v${{ github.event.inputs.version }}"
        prerelease: false
        title: "v${{ github.event.inputs.version }}"
        files: |
          staging/*
          LICENSE
          README.md
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: staging
