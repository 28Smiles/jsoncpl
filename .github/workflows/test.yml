name: Main

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install targets
      run: sudo apt-get install -y mingw-w64; rustup target add x86_64-pc-windows-gnu; rustup target add x86_64-unknown-linux-gnu
    - name: Run tests
      run: cargo test --verbose
    - name: Build Linux
      run: cargo build --target x86_64-unknown-linux-gnu --verbose --release
    - name: Create Linux artifacts
      run: mkdir staging; upx -9 -o staging/jsonlint target/x86_64-unknown-linux-gnu/release/jsonlint; cd staging; zip jsonlint-linux.zip jsonlint; tar -cvzf jsonlint-linux.tar.gz jsonlint; rm jsonlint
    - name: Build Windows
      run: cargo build --target x86_64-pc-windows-gnu --verbose --release
    - name: Create Windows artifacts
      run: upx -9 -o staging/jsonlint.exe target/x86_64-pc-windows-gnu/release/jsonlint.exe; cd staging; zip jsonlint-windows.zip jsonlint.exe; tar -cvzf jsonlint-windows.tar.gz jsonlint.exe; rm jsonlint.exe
    - name: Build-musl macOS x86
      uses: Shogan/rust-musl-action@v1.0.2
      with:
        args:
          cargo build --target x86_64-apple-darwin --verbose --release
    - name: Create MacOS artifacts
      run: upx -9 -o staging/jsonlint target/x86_64-apple-darwin/release/jsonlint; cd staging; zip jsonlint-macos.zip jsonlint; tar -cvzf jsonlint-macos.tar.gz jsonlint; rm jsonlint
    - uses: actions/upload-artifact@v2
      with:
        name: package
        path: staging
